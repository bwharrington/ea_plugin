import { FieldTypeDefinition } from '../core/data/fieldtypedefinition/fieldtypedefinition';
import { SerializedSchema } from '../core/data/serializedfield/serializedschema';
/**
 * The definition for a field to be included in a [SchemaDefinition](#interfaces_data_schemadefinition-SchemaDefinition)
 */
export interface FieldDefinition {
    name: string;
    type: FieldTypeDefinition;
}
/**
 * Definition of a schema for creating a [Collection](#classes_data_collectionproxy-CollectionProxy)
 */
export interface SchemaDefinition {
    fields: FieldDefinition[];
    /**
     * Field names that are used to construct primary keys for new data items.
     * Typically this contains only one field name, and that field is usually unique.
     */
    primaryKey: string[];
}
/** @ignore */
export declare function serializeSchemaDefinition(def: SchemaDefinition): SerializedSchema;
/** @ignore */
export declare function parseSchemaDefinition(def: SerializedSchema): SchemaDefinition;
