import { ItemProxy } from './itemproxy';
/**
 * A block is a single shape on the document. A BlockProxy provides an interface to
 * read and write the content of an existing block, and is typically accessed through
 * [PageProxy.blocks](#classes_document_pageproxy-PageProxy_blocks) or another
 * similar mechanism.
 */
export declare class BlockProxy extends ItemProxy {
    /**
     * @returns The class name of this block. This name is not necessarily human-readable,
     * and will remain consistent over time, e.g. "ProcessBlock"..
     */
    getClassName(): string;
    /**
     * @returns The amount this block is rotated around its own center, in radians.
     */
    getRotation(): number;
    /**
     * @returns An array of lines that have one or both endpoints connected to this block.
     */
    getConnectedLines(): import("./lineproxy").LineProxy[];
    /**
     * Link a text area to a data field, so that editing the text area will also update the
     * associated data, and vice versa.
     *
     * To use this, first establish a reference key on this block with
     * [setReferenceKey](/extension-sdk/#classes_document_blockproxy-BlockProxy_setreferencekey).
     *
     * @param textAreaKey
     * @param referenceKey
     * @param field
     */
    linkText(textAreaKey: string, referenceKey: string | number, field: string): void;
}
